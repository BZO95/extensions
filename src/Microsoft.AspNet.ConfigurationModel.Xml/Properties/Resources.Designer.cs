// <auto-generated />
namespace Microsoft.AspNet.ConfigurationModel.Xml
{
    using System.Globalization;
    using System.Reflection;
    using System.Resources;

    internal static class Resources
    {
        private static readonly ResourceManager _resourceManager
            = new ResourceManager("Microsoft.AspNet.ConfigurationModel.Xml.Resources", typeof(Resources).GetTypeInfo().Assembly);

        /// <summary>
        /// File path must be a non-empty string.
        /// </summary>
        internal static string Error_InvalidFilePath
        {
            get { return GetString("Error_InvalidFilePath"); }
        }

        /// <summary>
        /// File path must be a non-empty string.
        /// </summary>
        internal static string FormatError_InvalidFilePath()
        {
            return GetString("Error_InvalidFilePath");
        }

        /// <summary>
        /// Key '{0}' is duplicated.{1}
        /// </summary>
        internal static string Error_KeyIsDuplicated
        {
            get { return GetString("Error_KeyIsDuplicated"); }
        }

        /// <summary>
        /// Key '{0}' is duplicated.{1}
        /// </summary>
        internal static string FormatError_KeyIsDuplicated(object p0, object p1)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("Error_KeyIsDuplicated"), p0, p1);
        }

        /// <summary>
        /// Namespace is not supported in XML configuration file.{0}
        /// </summary>
        internal static string Error_NamespaceIsNotSupported
        {
            get { return GetString("Error_NamespaceIsNotSupported"); }
        }

        /// <summary>
        /// Namespace is not supported in XML configuration file.{0}
        /// </summary>
        internal static string FormatError_NamespaceIsNotSupported(object p0)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("Error_NamespaceIsNotSupported"), p0);
        }

        /// <summary>
        /// Unsupported node type '{0}' is found.{1}
        /// </summary>
        internal static string Error_UnsupportedNodeType
        {
            get { return GetString("Error_UnsupportedNodeType"); }
        }

        /// <summary>
        /// Unsupported node type '{0}' is found.{1}
        /// </summary>
        internal static string FormatError_UnsupportedNodeType(object p0, object p1)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("Error_UnsupportedNodeType"), p0, p1);
        }

        /// <summary>
        ///  Line {0}, position {1}.
        /// </summary>
        internal static string Msg_LineInfo
        {
            get { return GetString("Msg_LineInfo"); }
        }

        /// <summary>
        ///  Line {0}, position {1}.
        /// </summary>
        internal static string FormatMsg_LineInfo(object p0, object p1)
        {
            return string.Format(CultureInfo.CurrentCulture, GetString("Msg_LineInfo"), p0, p1);
        }

        private static string GetString(string name, params string[] formatterNames)
        {
            var value = _resourceManager.GetString(name);

            System.Diagnostics.Debug.Assert(value != null);

            if (formatterNames != null)
            {
                for (var i = 0; i < formatterNames.Length; i++)
                {
                    value = value.Replace("{" + formatterNames[i] + "}", "{" + i + "}");
                }
            }

            return value;
        }
    }
}
